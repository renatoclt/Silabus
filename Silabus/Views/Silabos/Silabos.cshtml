@model Silabus.Models.Silabos

@{
    ViewBag.Title = "Programa Formativo";
    Layout = "~/Views/Shared/_LayoutSilabo.cshtml";
}
<div class="col-md-12">
    <button class="btn btn-info col-md-2 align-middle margin-top-1" onclick="location.href='@Url.Action("ProgramaFormativo","ProgramaFormativo", new { Id = Model.Id })'">
        Bitácora <span class="glyphicon glyphicon-book"></span>
    </button>
    <h1 class="text-center col-md-8">Silabo</h1>
    <button class="btn btn-info col-md-2 align-middle margin-top-1" onclick="location.href='@Url.Action("ProgramaFormativo","ProgramaFormativo", new { Id = Model.Id })'">
        Programa Formativo <span class="glyphicon glyphicon-arrow-right"></span>
    </button>
</div>
<button class="accordion">IDENTIFICACIÓN ACADÉMICA </button>
<div class="container-fluid">
    <table class="tablaBorderRow">
        <tbody>
            <tr>
                <td style="height:100px;width:30%">
                    <img class="escudo" src="~/Img/ESCUDO.png" />
                </td>
                <td>
                    <span class="universidad">UNIVERSIDAD CATÓLICA DE SANTA MARIA <br /> AREQUIPA-PERÚ</span>
                </td>
            </tr>
        </tbody>
    </table>
    <table class="tablaBorderContorno">
        <tbody>
            <tr>
                <td><label class="titulo">FACULTAD:</label></td>
                <td><label class="respuesta">@Html.DisplayFor(model => model.Asignaturas.PlanEstudios.Escuelas.Facultads.Nombre)</label></td>
            </tr>
            <tr>
                <td><span class="titulo">ESCUELA:</span></td>
                <td><span class="respuesta">@Html.DisplayFor(model => model.Asignaturas.PlanEstudios.Escuelas.Nombre)</span></td>
            </tr>
        </tbody>
    </table>

    <table class="tablaBorderTd">
        <tbody>
            <tr>
                <td colspan="9" class="tituloRow">PLAN DE ESTUDIOS </td>
            </tr>
            <tr>
                <td colspan="9" class="tituloRow">SÍLABO DE ASIGNATURA </td>
            </tr>
            <tr>
                <td colspan="9" class="Divisiones">1. IDENTIFICACIÓN ACADÉMICA </td>
            </tr>
            <tr>
                <td colspan="8" class="sinRowSpan">Nombre de la Asignatura: @Html.DisplayFor(model => model.Asignaturas.Nombre) </td>

                <td rowspan="3" class="rowSpan"> El desarrollo de las actividades académicas se distribuye en tres fases de seis semanas cada una.</td>
            </tr>
            <tr>
                <td colspan="8" class="sinRowSpan">Código de la Asignatura: @Html.DisplayFor(model => model.Asignaturas.Codigo) </td>
            </tr>
            <tr>
                <td colspan="8" class="sinRowSpanF">Semestre Académico en que se desarrolla: @Html.DisplayFor(model => model.Asignaturas.Semestre) </td>
            </tr>
            <tr>
                <td colspan="8" class="DivisionDos">1.2.-Peso Académico de la Asignatura.</td>
                <td rowspan="5" class="rowSpan">
                    Cada semestre académico comprende dieciocho  semanas.
                    (Resolución Nº 3535-CU07)
                </td>
            </tr>
            <tr class="tablaCreditos">
                <td rowspan="3">CRÉDITOS</td>
                <td colspan="4">HORAS SEMANALES</td>
                <td colspan="3">HORAS SEMESTRALES</td>
            </tr>
            <tr class="tablaCreditos">
                <td rowspan="2">Horas Teóricas</td>
                <td colspan="2">Horas Prácticas</td>
                <td rowspan="2">Horas Virtuales</td>
                <td rowspan="2">Horas Teóricas</td>
                <td rowspan="2">Horas Prácticas</td>
                <td rowspan="2">Horas Virtuales</td>
            </tr>
            <tr class="tablaCreditos">
                <td>Práctica de Aula </td>
                <td>Jefe de Prácticas</td>
            </tr>
            <tr class="tablaCreditosRespuesta">
                <td>@Html.DisplayFor(model => model.Asignaturas.Creditos)</td>
                <td>@Html.DisplayFor(model => model.Asignaturas.HorasSemanalesTeoricas)</td>
                <td>@Html.DisplayFor(model => model.Asignaturas.HorasSemanalesPracticaAula)</td>
                <td>@Html.DisplayFor(model => model.Asignaturas.HorasSemanalesPracticaJefe)</td>
                <td>@Html.DisplayFor(model => model.Asignaturas.HorasSemanalesVirtuales)</td>
                <td>@Html.DisplayFor(model => model.Asignaturas.HorasSemestralesTeorica)</td>
                <td>@Html.DisplayFor(model => model.Asignaturas.HorasSemestralesPractica)</td>
                <td>@Html.DisplayFor(model => model.Asignaturas.HorasSemestralesVirtuales)</td>
            </tr>
        </tbody>
    </table>
</div>
<button class="accordion">SUMILLA</button>
<div class="container-fluid">
    @if (Model.SilaboDivisiones.Where(sd => sd.Divisiones.Id.Equals(Silabus.utils.Constantes.IDSUMILLA)).FirstOrDefault().Divisiones.Estado.Equals(Silabus.utils.Constantes.EDITABLE))
    {
        <div class="col-md-offset-11 padding-top-5">
            <button class="col-md-offset-2  btn btn-info btn-sm" type="button" onclick="location.href='@Url.Action("Edit",new {id = Model.Id ,
                    idDivision = Model.SilaboDivisiones.Where(sd => sd.IdDivision.Equals(Silabus.utils.Constantes.IDSUMILLA)).FirstOrDefault().Divisiones.Id})'">
                <span class="glyphicon glyphicon-pencil"></span>
            </button>
        </div>
        <div class="col-md-12 margin-top-1 form-group">
            @Html.DisplayFor(model => model.Sumilla)
        </div>
    }
    else
    {
        using (Html.BeginForm("GuardarSumilla", "Silabos", FormMethod.Post))
        {
            <div class="col-md-offset-11 padding-top-5">
                <div class="row">
                    <button class="col-md-offset-2  btn btn-success btn-sm" type="submit">
                        <span class="glyphicon glyphicon-ok"></span>
                    </button>
                    <button class="col-md-offset-2 btn btn-danger btn-sm" type="button" onclick="location.href='@Url.Action("EditCancel",
                                    new { id = Model.Id , idDivision = Model.SilaboDivisiones.Where(sd => sd.IdDivision.Equals(Silabus.utils.Constantes.IDSUMILLA)).FirstOrDefault().Divisiones.Id})'">
                        <span class="glyphicon glyphicon-remove"></span>
                    </button>
                </div>
            </div>
            <div class="col-md-12 margin-top-1 form-group">
                @Html.EditorFor(model => model.Sumilla, new { @class = "form-control", @rows = 5 })
                @Html.HiddenFor(m => m.Id)
            </div>
        }
    }
</div>
<button class="accordion">COMPETENCIAS DE LA ASIGNATURA QUE APOYAN AL PERFIL DE EGRESO  </button>
<div class="container-fluid">
    @if (Model.SilaboDivisiones.Where(sd => sd.Divisiones.Id.Equals(Silabus.utils.Constantes.IDCOMPETENCIAS)).FirstOrDefault().Divisiones.Estado.Equals(Silabus.utils.Constantes.EDITABLE))
    {
        <div class="col-md-offset-11 padding-top-5">
            <button class="col-md-offset-2  btn btn-info btn-sm" type="button" onclick="location.href='@Url.Action("Edit",new {id = Model.Id ,
                idDivision = Model.SilaboDivisiones.Where(sd => sd.IdDivision.Equals(Silabus.utils.Constantes.IDCOMPETENCIAS)).FirstOrDefault().Divisiones.Id})'">
                <span class="glyphicon glyphicon-pencil"></span>
            </button>
        </div>

        <div>
            <table class="table table-bordered margin-top-1">
                <thead>
                    <tr>
                        <th>Competencias</th>
                        <th>Fases</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var element in Model.Asignaturas.AsignaturaCompetencias.GroupBy(ac => ac.IdCompetencia)
                        .Select(grp => new { IdCompetencia = grp.Key, AsignaturaCompetencias = grp.ToList() })
                                      .ToList())
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => m.Asignaturas.AsignaturaCompetencias.Where(ac => ac.Competencia.Id.Equals(element.IdCompetencia)).FirstOrDefault().Competencia.Descripcion)
                            </td>
                            <td>
                                @foreach (var asignaturaCompetencia in Model.Asignaturas.AsignaturaCompetencias)
                                {
                                    if (asignaturaCompetencia.IdCompetencia.Equals(element.IdCompetencia) && asignaturaCompetencia.IdSilaboFase != null)
                                    {
                                            @Html.DisplayFor(m => m.Asignaturas.AsignaturaCompetencias.Where(ac => ac.Id.Equals(asignaturaCompetencia.Id))
                                                            .FirstOrDefault().SilaboFases.Fases.Nombre)
                                            <br />
                                    }

                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        using (Html.BeginForm("GuardarCompetencias", "Silabos", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.Id);
            <div class="col-md-offset-11 padding-top-5">
                <div class="row">
                    <button class="col-md-offset-2  btn btn-success btn-sm" type="submit">
                        <span class="glyphicon glyphicon-ok"></span>
                    </button>
                    <button class="col-md-offset-2 btn btn-danger btn-sm" type="button" onclick="location.href='@Url.Action("EditCancel",
                                    new { id = Model.Id , idDivision = Model.SilaboDivisiones.Where(sd => sd.IdDivision.Equals(Silabus.utils.Constantes.IDCOMPETENCIAS)).FirstOrDefault().Divisiones.Id})'">
                        <span class="glyphicon glyphicon-remove"></span>
                    </button>
                </div>
            </div>
            <div>
                <table class="table table-bordered margin-top-1">
                    <thead>
                        <tr>
                            <th>Competencias</th>
                            <th>Fases</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var element in Model.Asignaturas.AsignaturaCompetencias.GroupBy(ac => ac.IdCompetencia)
                            .Select(grp => new { IdCompetencia = grp.Key, AsignaturaCompetencias = grp.ToList() })
                                          .ToList())
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(m => m.Asignaturas.AsignaturaCompetencias.Where(ac => ac.Competencia.Id.Equals(element.IdCompetencia))
                                                  .FirstOrDefault().Competencia.Descripcion)
                                </td>
                                <td>
                                    @foreach (var asignaturaCompetencia in (List<Silabus.Models.AsignaturaCompetencias>)ViewBag.AsignaturasCompetencia)
                                    {

                                        if (asignaturaCompetencia.IdCompetencia.Equals(element.IdCompetencia) && asignaturaCompetencia.IdSilaboFase != null)
                                        {
                               
                                @Html.DropDownList("asignaturaCompetencia.Fases.value", (IEnumerable<SelectListItem>)asignaturaCompetencia.Fases, "Seleccione una fase", new { onchange = "cambiarFaseCompetencia(" + Model.Id + "," + asignaturaCompetencia.Id + ",this.value)", htmlAttributes = new { @class = "form-control margin-top-1" } })
                                <br class="margin-top-1" />
                                    }
                                    }
                                    @Html.DropDownListFor(model => model.PlanFuncionamientos.Fases, new SelectList(Model.PlanFuncionamientos.Fases, "Id", "Nombre") as SelectList, "Seleccione una fase", new
                                    {
                                        onchange = "agregarFaseCompetencia(" + Model.Id + "," + Model.Asignaturas.AsignaturaCompetencias.Where(ac => ac.Competencia.Id.Equals(element.IdCompetencia)).FirstOrDefault().IdAsignatura + ",this.value ," + element.IdCompetencia + ")"
                                    })
                                    <br />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    }
</div>
<button class="accordion"> CONTENIDOS BÁSICOS POR UNIDADES DE APRENDIZAJE </button>
<div class="container-fluid">
    <div class="container-fluid">
        @if (Model.SilaboDivisiones.Where(sd => sd.Divisiones.Id.Equals(Silabus.utils.Constantes.IDUNIDADES)).FirstOrDefault().Divisiones.Estado.Equals(Silabus.utils.Constantes.EDITABLE))
        {
            <div class="col-md-offset-11 padding-top-5">
                <button class="col-md-offset-2  btn btn-info btn-sm" type="button" onclick="location.href='@Url.Action("Edit",new {id = Model.Id ,
                idDivision = Model.SilaboDivisiones.Where(sd => sd.IdDivision.Equals(Silabus.utils.Constantes.IDUNIDADES)).FirstOrDefault().Divisiones.Id})'">
                    <span class="glyphicon glyphicon-pencil"></span>
                </button>
            </div>

            <table class="table table-bordered margin-top-1">
                <thead>
                    <tr>
                        <th class="tituloRow">Unidades</th>
                        <th class="tituloRow">Sub-Unidades</th>
                        <th class="tituloRow">Descripción</th>
                        <th class="tituloRow">Fases</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var unidad in (List<Silabus.Models.SilaboFaseUnidades>)ViewBag.Unidades)
                    {
                        <tr>
                            <td>@unidad.NroUnidad</td>
                            <td>@unidad.NroSubUnidad</td>
                            <td>@unidad.Unidades.Nombre</td>
                            @if( unidad.SilaboFases == null)
                            {
                                <td></td>
                            }
                            else
                            {
                                <td>@unidad.SilaboFases.Fases.Nombre</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            using (Html.BeginForm("GuardarUnidad", "Silabos", FormMethod.Post))
            {
                @Html.HiddenFor(m => m.Id);
                <div class="col-md-offset-11 padding-top-5">
                    <div class="row">
                        <button class="col-md-offset-2  btn btn-success btn-sm" type="submit">
                            <span class="glyphicon glyphicon-ok"></span>
                        </button>
                        <button class="col-md-offset-2 btn btn-danger btn-sm" type="button" onclick="location.href='@Url.Action("EditCancel",
                                    new { id = Model.Id , idDivision = Model.SilaboDivisiones.Where(sd => sd.IdDivision.Equals(Silabus.utils.Constantes.IDUNIDADES)).FirstOrDefault().Divisiones.Id})'">
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                    </div>
                </div>
                <table class="table table-bordered margin-top-1">
                    <thead>
                        <tr>
                            <th class="tituloRow">Unidades</th>
                            <th class="tituloRow">Sub-Unidades</th>
                            <th class="tituloRow">Descripción</th>
                            <th class="tituloRow">Fases</th>
                            <th class="tituloRow">Acción</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for(int i = 0; i < ((List<Silabus.Models.SilaboFaseUnidades>)ViewBag.Unidades).Count ; i++)
                        {
                            <tr>
                                <td><input type="number" id="NroUnidad" placeholder="0" value="@ViewBag.Unidades[i].NroUnidad"</td>
                                <td><input type="number" id="NroSubunidad" placeholder="0" value="@ViewBag.Unidades[i].NroSubUnidad"</td>
                                <td><input type="text" id="Unidad" placeholder="nombre Unidad"
                                        value="@ViewBag.Unidades[i].Unidades.Nombre"></td>
                                <td>@Html.DropDownList("@ViewBag.Unidades[i].Fases.value", (IEnumerable<SelectListItem>)@ViewBag.Unidades[i].Fases, "Seleccione una fase")</td>
                                <td>
                                    <button type="button" class="btn btn-default btn-sm" onclick="UnidadUp('@i')">
                                        <span class="glyphicon glyphicon-hand-up"></span>
                                    </button>
                                    <button type="button" class="btn btn-default btn-sm" onclick="UnidadDown()">
                                        <span class="glyphicon glyphicon-hand-down"></span>
                                    </button>
                                    <button type="button" class="btn btn-default btn-sm" onclick="UnidadTrash()">
                                        <span class="glyphicon glyphicon-trash"></span>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }
    </div>
</div>
<button class="accordion">EVALUACIÓN DE COMPETENCIAS ADQUIRIDAS  </button>
<div class="container-fluid">
    @if (Model.SilaboDivisiones.Where(sd => sd.Divisiones.Id.Equals(Silabus.utils.Constantes.IDEVALUACION)).FirstOrDefault().Divisiones.Estado.Equals(Silabus.utils.Constantes.EDITABLE))
    {
        <div class="col-md-offset-11 padding-top-5">
            <button class="col-md-offset-2  btn btn-info btn-sm" type="button" onclick="location.href='@Url.Action("Edit",new {id = Model.Id ,
                idDivision = Model.SilaboDivisiones.Where(sd => sd.IdDivision.Equals(Silabus.utils.Constantes.IDEVALUACION)).FirstOrDefault().Divisiones.Id})'">
                <span class="glyphicon glyphicon-pencil"></span>
            </button>
        </div>
        <div>
            @using (Html.BeginForm("CambiarFaseEvaluacion", "Silabos", FormMethod.Post))
            {
                @Html.DropDownListFor(model => model.SelectedSilaboFase, new SelectList(Model.SilaboFases, "Id", "Fases.Nombre"), "Seleccione Fases", new { @onchange = "this.form.submit()" })
                @Html.HiddenFor(m => m.Id)
            }
            @if (Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault() != null)
            {
                <div class="form-group">
                    <label>Titulo</label> <br />
                    @Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id == model.SelectedSilaboFase).FirstOrDefault().Titulo)
                </div>
                <div class="form-group">
                    <label>Saber Conceptual</label><br />
                    @Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.IdSaberes.Equals(Silabus.utils.Constantes.IDSABERCONCEPTUAL)).FirstOrDefault().Descripcion)
                </div>
                <div class="form-group">
                    <label>Saber Procedimental</label><br />
                    @Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.IdSaberes.Equals(Silabus.utils.Constantes.IDSABERPROCEDIMENTAL)).FirstOrDefault().Descripcion)
                </div>
                <div class="form-group">
                    <label>Saber actitudinal</label><br />
                    @Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.IdSaberes.Equals(Silabus.utils.Constantes.IDSABERACTITUDINAL)).FirstOrDefault().Descripcion)
                </div>
                <div class="form-group">
                    <label>Estrategias</label>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Estrategia</th>
                                <th>Saber</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var element in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes)
                            {
                                foreach (var estrategias in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboEstrategias)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboEstrategias.Where(se => se.Equals(estrategias)).FirstOrDefault().Estrategia.Nombre)</td>
                                        <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().Saberes.Nombre)</td>
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
                <div class="form-group">
                    <label>Evidencias</label>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Evidencias</th>
                                <th>Saber</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var element in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes)
                            {
                                foreach (var evidencias in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboEvidencias)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboEvidencias.Where(se => se.Equals(evidencias)).FirstOrDefault().Evidencias.Nombre)</td>
                                        <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().Saberes.Nombre)</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div class="form-group">
                    <label>Criterios de evaluación</label>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Criterios de evaluación</th>
                                <th>Saber</th>
                                <th>Puntaje Teoria</th>
                                <th>Puntaje Practica</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var element in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes)
                            {
                                foreach (var criterios in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboCriterios)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboCriterios.Where(se => se.Equals(criterios)).FirstOrDefault().Criterios.Nombre)</td>
                                        <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().Saberes.Nombre)</td>
                                        <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().ValorTeorico)</td>
                                        <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().ValorPractico)</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    }
    else
    {
        using (Html.BeginForm("GuardarEvaluacion", "Silabos", FormMethod.Post))
        {
            <div class="col-md-offset-11 padding-top-5">
                <div class="row">
                    <button class="col-md-offset-2  btn btn-success btn-sm" type="submit">
                        <span class="glyphicon glyphicon-ok"></span>
                    </button>
                    <button class="col-md-offset-2 btn btn-danger btn-sm" type="button" onclick="location.href='@Url.Action("EditCancel",
                                    new { id = Model.Id , idDivision = Model.SilaboDivisiones.Where(sd => sd.IdDivision.Equals(Silabus.utils.Constantes.IDEVALUACION)).FirstOrDefault().Divisiones.Id})'">
                        <span class="glyphicon glyphicon-remove"></span>
                    </button>
                </div>
            </div>
            <div>
                @using (Html.BeginForm("CambiarFaseEvaluacion", "Silabos", FormMethod.Post))
                {
                    @Html.DropDownListFor(model => model.SelectedSilaboFase, new SelectList(Model.SilaboFases, "Id", "Fases.Nombre"), "Seleccione Fases", new { @onchange = "this.form.submit()" })
                    @Html.HiddenFor(m => m.Id)
                }
                @if (Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault() != null)
                {
                    <div class="form-group">
                        <label>Titulo</label> <br />
                        @Html.EditorFor(model => model.SilaboFases.Where(sf => sf.Fases.Id == model.SelectedSilaboFase).FirstOrDefault().Titulo)
                    </div>
                    <div class="form-group">
                        <label>Saber Conceptual</label><br />
                        @Html.EditorFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.IdSaberes.Equals(Silabus.utils.Constantes.IDSABERCONCEPTUAL)).FirstOrDefault().Descripcion)
                    </div>
                    <div class="form-group">
                        <label>Saber Procedimental</label><br />
                        @Html.EditorFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.IdSaberes.Equals(Silabus.utils.Constantes.IDSABERPROCEDIMENTAL)).FirstOrDefault().Descripcion)
                    </div>
                    <div class="form-group">
                        <label>Saber actitudinal</label><br />
                        @Html.EditorFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.IdSaberes.Equals(Silabus.utils.Constantes.IDSABERACTITUDINAL)).FirstOrDefault().Descripcion)
                    </div>
                    <div class="form-group">
                        <label>Estrategias</label>
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Estrategia</th>
                                    <th>Saber</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var element in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes)
                                {
                                    foreach (var estrategias in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboEstrategias)
                                    {
                                        <tr>
                                            <td>@Html.EditorFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboEstrategias.Where(se => se.Equals(estrategias)).FirstOrDefault().Estrategia.Nombre)</td>
                                            <td>@Html.EditorFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().Saberes.Nombre)</td>
                                        </tr>
                                    }
                                }

                            </tbody>
                        </table>
                    </div>
                    <div class="form-group">
                        <label>Evidencias</label>
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Evidencias</th>
                                    <th>Saber</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var element in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes)
                                {
                                    foreach (var evidencias in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboEvidencias)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboEvidencias.Where(se => se.Equals(evidencias)).FirstOrDefault().Evidencias.Nombre)</td>
                                            <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().Saberes.Nombre)</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="form-group">
                        <label>Criterios de evaluación</label>
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Criterios de evaluación</th>
                                    <th>Saber</th>
                                    <th>Puntaje Teoria</th>
                                    <th>Puntaje Practica</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var element in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes)
                                {
                                    foreach (var criterios in Model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboCriterios)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().SilaboCriterios.Where(se => se.Equals(criterios)).FirstOrDefault().Criterios.Nombre)</td>
                                            <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().Saberes.Nombre)</td>
                                            <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().ValorTeorico)</td>
                                            <td>@Html.DisplayFor(model => model.SilaboFases.Where(sf => sf.Fases.Id.Equals(Model.SelectedSilaboFase)).FirstOrDefault().SilaboFasesSaberes.Where(sfs => sfs.Id.Equals(element.Id)).FirstOrDefault().ValorPractico)</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        }
    }
</div>
@*<button class="accordion">BIBLIOGRAFÍA </button>
    <div class="container-fluid">
        f
    </div>*@


@section Scripts{
<script>
        function cambiarFaseCompetencia(id, idAsignaturaCompetencia, idFase) {

            $.post("@Url.Action("CambiarFaseCompetencia", "Silabos")", { id: id, idAsignaturaCompetencia: idAsignaturaCompetencia, idFase: idFase } ,function(data){

            });
        }
        function agregarFaseCompetencia(id, idAsignatura, idFase, idCompetencia) {
            var link = '@Url.Action("AgregarFaseCompetencias", "Silabos")';
            $.ajax({
                type: 'post',
                url: link,
                data: {
                    id: id,
                    idAsignatura: idAsignatura,
                    idFase: idFase,
                    idCompetencia: idCompetencia
                },
                success: function (data) {
                    window.location.reload(true);
                },
                error: function () {
                    alert('error happened');
                }
            });
        }

        function UnidadDown() {
            alert("bajar");
        }

        function UnidadUp(index) {
            var unidades = '@(ViewBag.Unidades)';
            @ViewBag.Id = $(this).attr("id")
        }

        function UnidadTrash() {
            alert("UnidadTrash");
        }
</script>
}

